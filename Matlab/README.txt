We here provide the Matlab implementation of AIGS. 

**DEMOS**
We provide two demos for the usage of AIGS in both clustering and visulization implementations.

In demo_AIGS_C.m, we provide the script for clustering on eight data sets with the output as running time, ACC, NMI and ARI. The other output are saved in the sturct called 'out' as follows.

1. num_cluster: Number of cell classes estimated by AIGS.

2. idx_cell: After removing abnormal cells by AIGS, the index of remaining cell.

3. idx_gene: After AIGS gene selection, the index of remaining genes.

4. nc: Number of connected branches for estimating number of clustering

5. grp: The final clustering result.

6. grps: The clustering result under different number of clustering.

7. Q: The spectrol projection for final clustering.

8. C: The category center obtained when Q is clustered with K-means.

9. D_: The distance matrix generated in the gene selection.

10. A_: The similarity matrix generated in the gene selection.

11. D: The distance matrix generated for clustering.

12. A: The similarity matrix generated for clustering.

If you want to modify the model parameters, you can modify them in options, such as the threshold in gene filtering, the default is [log2(3) 3/2], the number of genes selected each time in gene selection, the default is 100, the proportion of abnormal cells, the default is 5 (means 5%). 

In demo_AIGS_V.m, we provide the script for clustering on eight data sets with the output as the figure of 2D embedding, the clustering accuracy called ARI and the mean silhouette coefficient between 2D embedding and golden label of each data set. The other output are saved in a cell array called Res_Visual_AIG as follows:

1. The first is the origin data as each row represents the expression of a gene on a different cell.

2. The second is the 2D embedding generated by AIGS_V.

3. The third is the golden labels after outlier reduction.

4. The last is the mean silhouette coefficient between the 2D embedding and golden labels.

In demo_AIGS_M.m, we find the marker genes through our clustering result with the output as the heatmap of marker genes and clustering result. The other output is a cell array called idx_marker, the i-th position refers to the index of the marker gene of i-th class in the original gene, and idx_marker_gene is a cell array, contained all of the marker genes found by demo_AIGS_M which can be used to find the name of the marker gene according to the data source literature, and further assist biological analysis.

In addition, we have provided the .mat formatted datasets of the eight datasets discussed in the paper in the Data folder. Due to GitHub's file size limit, Xin and Lake datasets have been split into several subfiles. The data can be merged using the following two codes.

Lake: 
load('Lake_fea_1.mat')
load('Lake_fea_2.mat')
load('Lake_fea_3.mat')
load('Lake_fea_4.mat')
load('Lake_fea_5.mat')
load('Lake_fea_6.mat')
load('Lake_gnd.mat')
fea = [fea1,fea2,fea3,fea4,fea5,fea6];

Xin: 
load('Xin_fea_1.mat')
load('Xin_fea_2.mat')
load('Xin_fea_3.mat')
load('Xin_fea_4.mat')
load('Xin_gnd.mat')
fea_new = [fea1,fea2,fea3,fea4];

We also provide the code for generating all figures in the paper and supplementary material, along with the results obtained from running them on our personal computers. You can obtain figures consistent with the numbering in the paper by running the Plot_Figure_Manuscript.m and Plot_Figure_Supplementary.m files.
